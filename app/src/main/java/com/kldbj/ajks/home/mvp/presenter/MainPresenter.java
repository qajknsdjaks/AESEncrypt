package com.kldbj.ajks.home.mvp.presenter;

import android.app.Application;

import com.alibaba.fastjson.JSON;
import com.jess.arms.integration.AppManager;
import com.jess.arms.di.scope.ActivityScope;
import com.jess.arms.mvp.BasePresenter;
import com.jess.arms.http.imageloader.ImageLoader;

import io.reactivex.android.schedulers.AndroidSchedulers;
import io.reactivex.annotations.NonNull;
import io.reactivex.schedulers.Schedulers;
import me.jessyan.rxerrorhandler.core.RxErrorHandler;
import me.jessyan.rxerrorhandler.handler.ErrorHandleSubscriber;
import me.jessyan.rxerrorhandler.handler.RetryWithDelay;

import javax.inject.Inject;

import com.kldbj.ajks.app.bean.JsonNangua;
import com.kldbj.ajks.app.bean.JsonNanguaList;
import com.kldbj.ajks.home.mvp.contract.MainContract;

import java.security.MessageDigest;
import java.util.Date;
import java.util.List;


/**
 * ================================================
 * Description:
 * <p>
 * Created by MVPArmsTemplate on 07/24/2020 10:10
 * <a href="mailto:jess.yan.effort@gmail.com">Contact me</a>
 * <a href="https://github.com/JessYanCoding">Follow me</a>
 * <a href="https://github.com/JessYanCoding/MVPArms">Star me</a>
 * <a href="https://github.com/JessYanCoding/MVPArms/wiki">See me</a>
 * <a href="https://github.com/JessYanCoding/MVPArmsTemplate">模版请保持更新</a>
 * ================================================
 */
@ActivityScope
public class MainPresenter extends BasePresenter<MainContract.Model, MainContract.View> {
    @Inject
    RxErrorHandler mErrorHandler;
    @Inject
    Application mApplication;
    @Inject
    ImageLoader mImageLoader;
    @Inject
    AppManager mAppManager;

    @Inject
    public MainPresenter(MainContract.Model model, MainContract.View rootView) {
        super(model, rootView);
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        this.mErrorHandler = null;
        this.mAppManager = null;
        this.mImageLoader = null;
        this.mApplication = null;
    }
//    playurl
//{
//    "code": 200,
//        "msg": "succ",
//        "data": {
//    "response_key": "B083AB181CC916A2C7E33689A005CD6D84F784BCCDE24ABE31F84215EB10140BC991A5010DD281C0A80B730AC4233823E432CDF8A011494EC9CBE0B14C2B633407A1A0F33D17C001F7755DEB9EABAAB6D128BDBC451142B06D2D77C1561A533E208F48B71A06A4F24D972A0E46A529A6671782391DEF194D0A762BBCCDDC85F3017C1220A8B7C4786CDFEF0F4C06348CF6AA29C8DA3DBD724BADEC36F9715A8678122FA838594D0601A5E582029DE78A8A6A1761ED2A1520F4B326BADA2FA74453EBCA8F2779844536AF18663EF4F51A8D9A44EBFD4A1B6D075C8C5B3C461B89534CAB95983DEBEB51079BF9D417DFA84FDC0A1249092EFC23889D9D681D2AA275874BA095320A9059B59AEB99E7D9B037AF4239FCCA2F833D0567AD209D53E37E97B17C0121944A809D88EECB6945DDAD17A903403B3317D63CB1D5783FB3C9E8E92AF7CE0CB50A3CA8FF7FEE46C9819CF13817D8316FD87FC1ABEA46EB0495330600876939F44A39426C07B6F7A025788BF8217A2AFD1E7B151D375488EAF7567F78E90283DB2B7899062EFEA2D1C8FDF9D0ED7F258A25960B448E59947B59C4F65ACB523DBC1D8BAA4CFFB4CD8960750E4409FE942DAC41840A7D427C008DB5F1DD36CEFB1AC63C573299B2E52352D5DB829C911EE1FD5123E7C4E67B910BD9E8860B9D9D678BDB7A99A473FF13CEBA7D461AB96C285C7595A44E136BEFF098742214ECA1AA7B23247A31D1F61E148718A5D91BE702DB821397AC7A7EE13A"
//}
//}
//    playinfo
//{
//    "code": 200,
//        "msg": "succ",
//        "data": {
//    "response_key": "2AD297C6A0747183E2C385BDBE0968A7587F0C33CCEADF76199DC39683D8641E96A706E7257D8CF1595295F4F42247C72DF6A500A0341EDE9B056B4C16BDF826A54AD16A0306C825BD29B8DA284DBF9663CE09484E7ABF30555B0067BF48FFDC4EADF8A144C860A83F7ED7ACF4FC0957C7481F501D7598D60EEAEA864FF08D8F1A5C8755E2E7AD81FB85B67BA3EED5D6A0D25F7ABD15E9F6D2509C4F628F01B23034F07492CE2142DD70D480558686A5F910BF9C568019D10600713FE66D5E7EB56169C054A802F7A3544B84163A5EF2EAC54DEAD6514FD260802AC7FEED6B98ED16318B5053FBE116A82A37CF904B41A4E47D557A63A87AB5E6787452D4AEE6FD99B86FA3A242F0B98FE4C61B657C4D2F41B22B3FC59B528D799974A078A4F32DD9C581827811A0801F8DA3C871626751A1E76885157E356D04A994AA868FFA00638DD889484C304771DAEC9D0874F2493ADE379AC0ED6D877BAFE5B969EA07C61269024741D6E0F9B13CA49BA7DAEA1B184055758533367550AC8C07A4D49EA16F594E180487605CA1DA525D627EE87649CF4185E7BE23AA4B3D25227CBA98EF578B04DA104D8D8B92700B37C6BD4ACFA1CD813B7D21048D9C53FAF11AF12A23B5229B116E5051A7FF1B9CA1874B8305C54A9060C3862957814E8D0127D992ADAE27EA89AE82D4582B853E188A5B12C791A08F47F5B93477B53C01D034A1DFBF0C7A94E20F56FF6374C5EBFB948B9AAFA9CCE9E0F024FAB3BC3101BE7D5F71EF555F28BAE7F63FFCED1ACE30D5AF12B6D5DABF33937FA3B2F98BAFA9BEA9AAF4151C9BD5A639B930959610D4C300166C609E6DB3B54570D68EFDA6FE17D4CFB8B88ACFA8B1CC2CAFC0B13D7528FD9780D5B593330B0B5065783869436E4C48AD75D81337032D638922F58E22D13B84C753F4B66AF2E22286808A3F4DC6D86028F8C845196070CADAD9A9D9B8EBD13403F160D94DAE8C08E658565F7DBC9C6B1C2F5A24E97798E3A596407E0E412F8EEE492BCD318240AA99880582B07F0046BE56B183FA46974C936983EA4BB6B6A58A00007785F69747096B9ABC9564A643A8700D4B03561EE689306D4BD0BBEDD1513AC831D086EBC6E666092B25ADE30F47A5D6146841CB65B592A5731318CD535A7ABB40F22AB8A1F085E0230128D12936033A699C0AA1ADBDD16999E5C0BF64E052DC2A76C5A3F252137A951ECEF9601495DADB11D9FBFBDE923706FC06F7FD3D183586628785F39B0BF4A92148C84C529E7281A0B11255A7665E1B06122DCE969C03FA355BCF8F4BDE0953805D8BAC301A329EDE4E39D276B984D52D0FD0E88082629213E0F1330A5AC876965AAA3CEBB49D48EE698B562DBEA57208B5C96A3B600E52689A43E85014D9B07B72C1EF091BE720CE87E129C0B19D51AF681345202CBE3E0F891B715867A029F58A3A75174AD9564E87B07FC8B975F858D4365BF46F8491A0BE0D58A3F1B5F929B20498C560375ADAF4F765E18DBD375090C6D57D3CACE2CF4E5487BF4927CA786498508965F4F4BDEC3E4D6587AC9FE9CBA48370B509908CDAFFB98FBAEF2456F3B59E9332A92AE7EE67F12C8D6FADB2925459156212C5ED1BFB42F1EC9E5AF3591FA8551DFB3E29E2A13968114888FB051B5FE9827FED7DD47C597F21B66850496E6B7741B41A2B79F4C101CDADA289772139CEF7ACF1D9DE134B3E20E47022E7EE00C5F2782934CD22374455709661FEEBE7D3A27C2FE5344898ED6B5ADC658FC8D06F7D2E74ABF14CE381DC39258614C6C8096E5D1C777EC12F1A6362DDA47855431275EF41BF3AE595280D6E88287F65E21A8840880C0AD1CCFBF944F5FB1C7AF2FE2CC62FBB959969AA2EEF112B47E1E6DBB1084C7DC224DC42BED6EC42E77EF87A24FD4C4BC4707FD49280B3149D89909878762A25734AD0D9F207C4B41410EB32FCE355CCC489FA331071AB454929F910158AB18082534C8419BEB7C899FA14DF8F4AF08ABE979BB227ECECBA915EC0C95AA31686EF6F8E6CAE7A589FE7B47B617CFCD252A8E34BBAC523EDF92165A1037E6FC7BE3709AB1DB0A64A1CC3F8799E17DBA97C5CEBA824243B179D174BB7BFC773F71FBE4A1F3C01A4130F5EE4BB2136F433616A01CBC28B05D4D6A75A31447FEAC2AA5199C3783D85D34D0777B451A25205EFAE688FBAA2A425AECBD9E2F104A5F7F59502A10378E00E35C0B3F21C22F02139ECF24357A83AA59D52EF271045F8937EA6A68D30E33F46190B248E169B9B74DBDB0E0577D2002E8B31611D187735894C0641687EA4D2B737CC0802AD9E15356536C35F9094E0EC97A6B446AEB0A1492131112B0384E69418AAEF2C203BBA755AF1BA1124A443BDE1E3F51976783EDF7D4EBD756F0C1FB24BE9FC41C6C21AC7596340F7B8D1D8E5EAC49D95E6D0B32B1541A9B7307E5D05B830A0723DA927A656A1CCB3E1024746AB2F564698C6FC1761AD0F1F5C0801A90DEC5D875BD869F49DAED2B1B02F97A718D6D7E2CB6E834B36750BEE65F730B16A0FAEA68D17ADB26C44992B0C13286BABA6EE9C832EC45423B7D2428B88C4488ED744016BBBC5F9F03DD8CE194CC0673CA072444B2E9D82B4C638553DF32211B9EBEE63A90093D9183874B5F6ED0B9B0172023806FBF735D7461793967B4DA51EA05BCEB756EE8FE014EDD12979E6C2E30851CCFF309C799DE632147AEA320BE816CCB0C240EF0FB2F0DA5F871EEEF113FC4B7C5AF69B1EE74EF0249F75D71B8AC637C3EDE2729CBC87C2631AD39365CE49EEE90B81A2600D10911E0B4D2A5144BCBBE4BACA013E16FEFFB68488C6A7698573EA7C769B44ED1E6240C32BF4436B2E5F5CCCECCFAC11C3BEDD7EF9EC59FD736861F120D5848A66FB4D9A7CA7054A27B1B3AE4273D077156BFCD2EC48EF8730B93CFC0E0576A3E8CBB13807404C3A6BBF0FEE55BB45E43C43E01705FA2D8B9C44F1E9E546A1BF9C860D42CA29F63FDFF66366D05175A7F7BDBE2725BD11180FECD961A990ABF2CE6D30536752216037E96A7A82290302F161D69F7F65BF3C43BCBEE15DC704C2A7926C6149955025F3F2E76A99169D425779A2D44CD0A6626A82E95E56BDA800C56A28FF57EDD84CA83A1D289C322D4AB3115124EA8BBF683C13FB373BD65C0202F5AA16BA2D0277509DDBD487EB5DE1AE063D5B5B923542F07B5C65078B4E12A09E39C0451F03EA34BC7FD6EEC2443C1619F54F832ADE6F8067736971FD14595AFAA2D6BD27F8C5A7CE6F0082D71400372A39920BBB06C0A0005A26E2A16B7135BCAEAAD000603FBA202F1A89209209CD5A7538A097778EA712AD6B6B48FA9ABD25909CAD865C5AE49F094DF527C79458354272EDA24437D464DA953E9C5E61A2480C0017E9E783124DA41A589FC90D784BE87F3EFD824824D32403C065A3D00327F57A7EC3189D9CB939762536434DF33F488A0C7B98BB131AF6972C0FE2E022AB9C1F8CD28F00A9D2E0C21320988F39F543F1EDC22ADB12FB1167C5AA4AF49EAE91E490165A64AF612EFA6A2902CE9CA9C612D56C27E8DD8F1BB449325C3695967A99584C7FBFA8EBFBB49F1BD1C35E6FA3B2AFDE19B68F39B0F584B9DBF28FD2F6B149832844571CFD08FF3D570A9614B9629BCFA1C6217E379EB81305F30EEFE0566F781727FB5C4973351BE99E3EC36091959496DEF69CAF3AC1EAFB69A44EFB999CFCE3D1CA3FE8DE65EF3A3A04EFD24A08405B9B580520FDE1769368AE58E89134E968C3CE5EF0F18CDF3002FC1E596F87A2364DF4261909E8CE30C8315AF5CFEE15D5732843EE7C647FCDD08BF2809D98473ECCEA9E53B907938EEBD1E92D9889CFD9A3339952DADED1127ECEA5B7FF91FE2E729D73859F1F85B877C9CDC216A5DDA925E6DB3F4F1E9AEF0E580028FE6BA5D5A354B7DE4355E1B6EA3E98EE9783C4478B8508F15C9909B63F9EAE631D6B77A50B086D15032D0F9DA9642C42C0006C2DF85CC3C10F6D0ED5DBC1FC507263C3C8B6F63E194989CDB0A0CC69A846C6F69FA56BAFF5D99D678DB57CDD833120F828B490B4D655A60730E10F2528BD41E09DABBEA8B37663FFDCE75CE0E136A72CB075E7BE697F5A83128FBF6CE1DC53A85F2CEBABC674177C09792034C5049A0A670B63C33D4952FC27CBC8537B70D7D742A5B3644213FB32C4812D3D08068CBB8B09842BEB96312465046BFFA1404030CB00F6986E10DCA7D14FEBCB72FFB37B9990C12EB456849B95D813139CEBAD28D03FC1B959B33D548DBAE835F2403FA2D848F61E0321BEEC3F50121F8BCAB047429182543816377BAA3290F8EB4D68EC695952FD848B3A073DB5071E9ACC50B29F0E3E85D821A47119A75BEDA21C613F4C82957F874C805BC834EA2FD8F4894325712E5BD5B8F9621F49290C772E6A188D505B3EED0B2DF0DF86C55710C55F0C802A48CE99EDE88A5DF79557CED34675B6BB5424D348FAE3321D97AF9AB8D92670827CC06AE20A8480400A5AF50CCC44DF87C00BDD36B801918AC65B690BCE5F16C73A7E55417AD34E050D53DB324762AECD5C33F8540443379A03EFC2882CC253655C6B9B1C5AA7A417BDEE5D813A381211A342C4C7A4A59C333C9A3F4E8E0A95BECC37974EADF03A8B58C55332BE00711CC0520F42893106626663E85E95B5ACEF4D915DE25659EB39097379247BB83F93C28B42026E0AAEDF8BEE2DC7225212D0519B1DA8BE74BB9C506725329ED4A779DCB7FCB6988E4A82B046B8A0C6FC06E3143D955EC8D495328F319A54F1EFC69A08AF854619622D06D3E160B379687C6224927D94E9EDA932C2EA58FFCEDA95B2B28CEF36525CFCB6E159E63CD296B295D764083A0A6F03A6DBADFFC28F7710E29BB0187E53544B95BBBA582988904729020C925167A2E5BE2D765B5A654E950B4974E685C005DEEB1863A75C66ADD300574E79C511C6162DF7B5D8C3DBAB7CB24208E1004FA2E1CA051BADCE8D2E82BD714E31277D3CA7D651B37F9F90AAD6CCEF475F6EE182BEE6FF9E37F4385FF4D3A55292946039228F4AD1FACB20D7E41538C435852B926DE3059769B2EDDDDCB7D9724F105AC780F1F61AB2AF25C8E82BA18EE2"
//}
//}
    public void getPlayUrl() {
        //    token=d26bf87c3a75c951f12f3743b6195c40&token_id=12824744&phone_type=1&versions_code=1401
        //    &request_key=DFB426E40904649CAD89334B481FA89EF1C5224BDCFDBC94C6AD5431CE8EA10E86273E5BA42657D520F2242BDE9F9896470AFC6F012637E66A613FCC8EEC1D8E9CD839BEB7F596E664F0F77D0A40CC3063398ACF569E4E505322B1F3DBBACEDDF8C1F5D14D850F68C7BC3301C615EB298D7DF74A99FEA6DB5AF911A5BD7E5D3099B5BE53FB883425B98579B02FB9C42FF207AE9F55FDB0576A0118DF5EFABE67C2C7152839594E6D128944208252C929DD4FBF4C923233DBF3E64CC9E254E02208B54AB0D771F197990A63D372440F180F6BD2FF8047FD67355848D857B2EBF9
        //    &app_id=1&ad_version=1
//        {
//            String data ="FB4C60D34345B56C4DD2E8D46A1E8F72DAD641B87D77E29E7B452120C67391F7BB150E35AC92DD9B53E306CF335FE6FD97BCA72EA98D4E14AF74650C1F9C0A5B511353FEBEE16C62ADEA783F088A59247CE5E4CDB7417A3AE918DECF3F0699968BCC293D3EF021EFC017074C161383D0AFA5151D34CB2F8C7603304B09590FFAF8DD4A43DBB20B663E7E407522A9946460F3D339D30E0C44715199EF0C1E3C9E1774A4256763B8E6799E8C9ABF039D0F300FC4E9CD26A57ECD2C9AA43E24C1900B53D83737F6E26A93BC275AF5D4415D40CD48367B969D09F4A91D273C7D5F9D8BE6CF15679B4DA6D6421645E9C38768DEF96855F5E44018ADF02A89EA3CC0E29FE3BF71B2E62CAF957D5DFB7899AFBA5C62BFA519785C09B1A45845BD5A709BFA38DC57220C25D023CB163755E6241DE8141728E48D4060D75EFB5C521ACDF8689D651154F6623408572FF648C6D5C6E722541A7CF4407D812922755F94483B9241AB7AEE04C7F0F5463D2C1772C96A0B78BC954C4F8C54BCAE859024481C980D2568A191B8267761DB4ACB14CAE0269453BD1E9757A061CAD70459519798E15B78434091FF82ACAC3468E4AA424A08D934ECA9F15A7A25A04193E6AFB635C7A4E3575C00317C3FFB1354A896843064CFC4547764A6FAE9D2404F51A0B8228B60F990D7D6666795A6F298749398873060CD08F630CABD122AD1E77B1575DD0408508F6BBA670EE87DBAB47DF19F3D3C78D104AF14B2A3FF96F450627627BD3B91E89FD33B5B89AA45498755960DDF8ACCBB0B53E121D262C794ACCC3E3A955C6335E776F58A84C82580D768AD0E3C1F49BFE404748BC70FAF479EE6FEF6A9A1";
//            String decrypt = e.d(data, "8jhM5h6dezq4QifP", "tho3aAHJyZCWAfTG");
//            System.out.println(decrypt);
//        }

        {
            String data ="B083AB181CC916A2C7E33689A005CD6D84F784BCCDE24ABE31F84215EB10140BC991A5010DD281C0A80B730AC4233823E432CDF8A011494EC9CBE0B14C2B633407A1A0F33D17C001F7755DEB9EABAAB6D128BDBC451142B06D2D77C1561A533E208F48B71A06A4F24D972A0E46A529A6671782391DEF194D0A762BBCCDDC85F3017C1220A8B7C4786CDFEF0F4C06348CF6AA29C8DA3DBD724BADEC36F9715A8678122FA838594D0601A5E582029DE78A8A6A1761ED2A1520F4B326BADA2FA74453EBCA8F2779844536AF18663EF4F51A8D9A44EBFD4A1B6D075C8C5B3C461B89534CAB95983DEBEB51079BF9D417DFA84FDC0A1249092EFC23889D9D681D2AA275874BA095320A9059B59AEB99E7D9B037AF4239FCCA2F833D0567AD209D53E37E97B17C0121944A809D88EECB6945DDAD17A903403B3317D63CB1D5783FB3C9E8E92AF7CE0CB50A3CA8FF7FEE46C9819CF13817D8316FD87FC1ABEA46EB0495330600876939F44A39426C07B6F7A025788BF8217A2AFD1E7B151D375488EAF7567F78E90283DB2B7899062EFEA2D1C8FDF9D0ED7F258A25960B448E59947B59C4F65ACB523DBC1D8BAA4CFFB4CD8960750E4409FE942DAC41840A7D427C008DB5F1DD36CEFB1AC63C573299B2E52352D5DB829C911EE1FD5123E7C4E67B910BD9E8860B9D9D678BDB7A99A473FF13CEBA7D461AB96C285C7595A44E136BEFF098742214ECA1AA7B23247A31D1F61E148718A5D91BE702DB821397AC7A7EE13A";
            String decrypt = e.d(data, "8jhM5h6dezq4QifP", "tho3aAHJyZCWAfTG");
            System.out.println(decrypt);
        }
        String data ="DFB426E40904649CAD89334B481FA89EF1C5224BDCFDBC94C6AD5431CE8EA10E86273E5BA42657D520F2242BDE9F9896470AFC6F012637E66A613FCC8EEC1D8E9CD839BEB7F596E664F0F77D0A40CC3063398ACF569E4E505322B1F3DBBACEDDF8C1F5D14D850F68C7BC3301C615EB298D7DF74A99FEA6DB5AF911A5BD7E5D3099B5BE53FB883425B98579B02FB9C42FF207AE9F55FDB0576A0118DF5EFABE67C2C7152839594E6D128944208252C929DD4FBF4C923233DBF3E64CC9E254E02208B54AB0D771F197990A63D372440F180F6BD2FF8047FD67355848D857B2EBF9";
        String decrypt = e.d(data, "8jhM5h6dezq4QifP", "tho3aAHJyZCWAfTG");

//                {"token_id":"12824744","ns":"ab4c3164e16f32c9d5cb1dd3cddf700b","nt":"1606982283","mobile_key":"3a6855049a772052a8b09f1bd03dc2e9","vod_id":"151474","mobile_time":"1606982283","token":"d26bf87c3a75c951f12f3743b6195c40"}
        String encrypt = e.f(decrypt, "8jhM5h6dezq4QifP", "tho3aAHJyZCWAfTG");


        System.out.println("decrypt----->"+decrypt);
        System.out.println("encrypt----->"+encrypt);

        String nt = "1606982283";
        String ns = getMD5("com.pumpkinteam.pumpkinplayer96D89D9AC7A9AA1AF6F634ED4463AAE5E7798C45C2C606CAB00CA73DA8A1005A&z4Y!s!2br"+nt).toLowerCase();
        System.out.println("ns----->"+ ns);

        String str = "{\"token_id\":\"12824744\",\"ns\":\""+ns+"\",\"nt\":\""+nt+"\",\"mobile_key\":\"3a6855049a772052a8b09f1bd03dc2e9\",\"vod_id\":\"151474\",\"mobile_time\":\"1606982283\",\"token\":\"d26bf87c3a75c951f12f3743b6195c40\"}";

        String request_key = e.f(str, "8jhM5h6dezq4QifP", "tho3aAHJyZCWAfTG");

        System.out.println("request_key"+request_key);

        if (false)
        mModel.getPlayUrl( request_key )
                .subscribeOn(Schedulers.io())
                .retryWhen(new RetryWithDelay(3, 2))
                .doOnSubscribe(disposable -> {
                    mRootView.showLoading(new Date().toString());
                })
                .subscribeOn(AndroidSchedulers.mainThread())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new ErrorHandleSubscriber<JsonNangua>(mErrorHandler) {
                    @Override
                    public void onError(@NonNull Throwable e) {
                        mRootView.hideLoading();
                        mRootView.showMessage(e.getMessage());
                    }

                    @Override
                    public void onNext(@NonNull JsonNangua result) {
                        mRootView.hideLoading();
                        if (result.getCode() == 200){
//                            {"playKey":"?wsSecret=926928b5e904abb452f7dfd97f876b2a&wsTime=1607309107","playRef":"http:\/\/f.fimm9v.com\/"}
                            String decrypt = e.d(result.getData().getResponse_key(), "8jhM5h6dezq4QifP", "tho3aAHJyZCWAfTG");
                            mRootView.showMessage(decrypt);
                        }else {
                            mRootView.showMessage(result.getCode()+result.getMsg());
                        }


                    }
                });
        //        1607180463+5D0sUw@vT4
//        {"s":"1cc40358cda345ec2384ba99fd419cd4","t":"1607180463","ns":"dc28eb380f3f90a9b2a74402df1feaed","nt":"1607180464"}



//        token=e2c797fdc72998569eadc09b74ab9e41&token_id=93446681&phone_type=1&versions_code=1401&request_key=&app_id=1&ad_version=1
//        POST /App/UserInfo/getUserInfo HTTP/1.1
//        Content-Type: application/x-www-form-urlencoded
//        Content-Length: 379
//        Host: jk.xgrruyx.cn
//        Connection: Keep-Alive
//        Accept-Encoding: gzip
//        User-Agent: okhttp/3.12.0
//
//        token=e2c797fdc72998569eadc09b74ab9e41&token_id=93446681&phone_type=1&versions_code=1401&request_key=&app_id=1&ad_version=1

    }
    public void getUserInfo() {
        String t1 = System.currentTimeMillis()+"";
        String t2 = System.currentTimeMillis()+"";
        String strxx = "{\"s\":\""+ getMD5(t1+"5D0sUw@vT4")+"\",\"t\":\""+t1+"\"," +
                "\"ns\":\""+ getMD5("com.pumpkinteam.pumpkinplayer96D89D9AC7A9AA1AF6F634ED4463AAE5E7798C45C2C606CAB00CA73DA8A1005A&z4Y!s!2br"+t2).toLowerCase()+"\",\"nt\":\""+t2+"\"}";
        String key = e.f(strxx, "8jhM5h6dezq4QifP", "tho3aAHJyZCWAfTG");
        String request_keyxx = "token=e2c797fdc72998569eadc09b74ab9e41&token_id=93446681&phone_type=1&versions_code=1401&request_key"+key+"=&app_id=1&ad_version=1";
        mModel.getUserInfo( request_keyxx )
                .subscribeOn(Schedulers.io())
                .retryWhen(new RetryWithDelay(3, 2))
                .doOnSubscribe(disposable -> {
                    mRootView.showLoading(new Date().toString());
                })
                .subscribeOn(AndroidSchedulers.mainThread())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new ErrorHandleSubscriber<JsonNangua>(mErrorHandler) {
                    @Override
                    public void onError(@NonNull Throwable e) {
                        mRootView.hideLoading();
                        mRootView.showMessage(e.getMessage());
                    }

                    @Override
                    public void onNext(@NonNull JsonNangua result) {
                        mRootView.hideLoading();
                        if (result.getCode() == 200){
                            String decrypt = e.d(result.getData().getResponse_key(), "8jhM5h6dezq4QifP", "tho3aAHJyZCWAfTG");
                            mRootView.showMessage(decrypt);
                        }else {
                            mRootView.showMessage(result.getCode()+result.getMsg());
                        }


                    }
                });

    }

    public void getIndexList() {
        mModel.getIndexList()
                .subscribeOn(Schedulers.io())
                .retryWhen(new RetryWithDelay(3, 2))
                .doOnSubscribe(disposable -> {
                    mRootView.showLoading(new Date().toString());
                })
                .subscribeOn(AndroidSchedulers.mainThread())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new ErrorHandleSubscriber<JsonNangua>(mErrorHandler) {
                    @Override
                    public void onError(@NonNull Throwable e) {
                        mRootView.hideLoading();
                        mRootView.showMessage(e.getMessage());
                    }

                    @Override
                    public void onNext(@NonNull JsonNangua result) {
                        mRootView.hideLoading();
                        if (result.getCode() == 200){
                            String decrypt = e.d(result.getData().getResponse_key(), "8jhM5h6dezq4QifP", "tho3aAHJyZCWAfTG");
                            JsonNanguaList json = JSON.parseObject(decrypt,JsonNanguaList.class);
//                            System.out.println(json);
                            mRootView.showNanguaList(json.getList());
                        }else {
                            mRootView.showMessage(result.getCode()+result.getMsg());
                        }


                    }
                });

    }



    public String getMD5(String data) {
        char hexDigits[] = {
                '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'
        };
        try {
            byte[] btInput = data.getBytes();
            // 获得MD5摘要算法的 MessageDigest 对象
            MessageDigest mdInst = MessageDigest.getInstance("MD5");
            // 使用指定的字节更新摘要
            mdInst.update(btInput);
            // 获得密文
            byte[] md = mdInst.digest();
            // 把密文转换成十六进制的字符串形式
            int j = md.length;
            char str[] = new char[j * 2];
            int k = 0;
            for (int i = 0; i < j; i++) {
                byte byte0 = md[i];
                str[k++] = hexDigits[byte0 >>> 4 & 0xf];
                str[k++] = hexDigits[byte0 & 0xf];
            }
            return new String(str);
        } catch (Exception e) {
            return null;
        }
    }



}
